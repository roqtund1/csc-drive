import React, { useEffect  } from "react";
import {app} from "../../firebase";

// const db = app.firestore();

export const Header = () => {
  const [fileUrl, setFileUrl] = React.useState(null);
  const [isOpen, setIsOpen] = React.useState(false);
  const [tags, setTags] = React.useState([]);
  const [tagInput, setTagInput] = React.useState("");
  const [name, setName] = React.useState("");
  const [desc, setDesc] = React.useState("");


  const onFileChange = async (e) => {
    const file = e.target.files[0];
    const storageRef = app.storage().ref();
    const fileRef = storageRef.child(file.name);
    await fileRef.put(file);
    setFileUrl(await fileRef.getDownloadURL());
  };

  const onSubmit = async (e) => {
    e.preventDefault();
    const username = e.target.username.value;
    if (!username || !fileUrl) {  
      return;
    }
    // await db.collection("users").doc(username).set({
    //   name: username,
    //   avatar: fileUrl,
    // });
  };

  useEffect(() => {
    const fetchUsers = async () => {
      // const usersCollection = await db.collection("users").get();
      // setUsers(
      //   usersCollection.docs.map((doc) => {
      //     return doc.data();
      //   })
      // );
    };
    fetchUsers();
  }, []);

  //write a useEffect to check if isOPen is true, if it is make the window unscrollable
  // if it is false, make the window scrollable
  useEffect(() => {
    if (isOpen) {
      document.body.style.overflow = "hidden";
    } else {
      document.body.style.overflow = "scroll";
    }
  }, [isOpen]);


  const handleTagInputChange = (e) => {
    setTagInput(e.target.value);
  };

  const handleTagInputKeyDown = (e) => {
    if (e.key === "Enter" || e.key === ",") {
      e.preventDefault();
      if (tagInput.trim() !== "") {
        setTags((prevTags) => [...prevTags, tagInput.trim()]);
        setTagInput("");
      }
    }
  };

  const removeTag = (index) => {
    setTags((prevTags) => prevTags.filter((_, i) => i !== index));
  };


  return (
    <div className='bg-[#010b27] px-14 py-4 flex justify-between items-center'>
      <div>
        <svg width="167" height="25" viewBox="0 0 167 25" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path d="M20.5455 8H17.7273C17.5606 7.18939 17.2689 6.47727 16.8523 5.86364C16.4432 5.25 15.9432 4.73485 15.3523 4.31818C14.7689 3.89394 14.1212 3.57576 13.4091 3.36364C12.697 3.15151 11.9545 3.04545 11.1818 3.04545C9.77273 3.04545 8.49621 3.40151 7.35227 4.11364C6.21591 4.82576 5.31061 5.875 4.63636 7.26136C3.9697 8.64773 3.63636 10.3485 3.63636 12.3636C3.63636 14.3788 3.9697 16.0795 4.63636 17.4659C5.31061 18.8523 6.21591 19.9015 7.35227 20.6136C8.49621 21.3258 9.77273 21.6818 11.1818 21.6818C11.9545 21.6818 12.697 21.5758 13.4091 21.3636C14.1212 21.1515 14.7689 20.8371 15.3523 20.4205C15.9432 19.9962 16.4432 19.4773 16.8523 18.8636C17.2689 18.2424 17.5606 17.5303 17.7273 16.7273H20.5455C20.3333 17.9167 19.947 18.9811 19.3864 19.9205C18.8258 20.8598 18.1288 21.6591 17.2955 22.3182C16.4621 22.9697 15.5265 23.4659 14.4886 23.8068C13.4583 24.1477 12.3561 24.3182 11.1818 24.3182C9.19697 24.3182 7.43182 23.8333 5.88636 22.8636C4.34091 21.8939 3.125 20.5152 2.23864 18.7273C1.35227 16.9394 0.909091 14.8182 0.909091 12.3636C0.909091 9.90909 1.35227 7.78788 2.23864 6C3.125 4.21212 4.34091 2.83333 5.88636 1.86364C7.43182 0.893939 9.19697 0.40909 11.1818 0.40909C12.3561 0.40909 13.4583 0.579545 14.4886 0.920454C15.5265 1.26136 16.4621 1.76136 17.2955 2.42045C18.1288 3.07197 18.8258 3.86742 19.3864 4.80682C19.947 5.73864 20.3333 6.80303 20.5455 8ZM37.8267 6.54545C37.6903 5.39394 37.1373 4.5 36.1676 3.86364C35.1979 3.22727 34.0085 2.90909 32.5994 2.90909C31.5691 2.90909 30.6676 3.07576 29.8949 3.40909C29.1297 3.74242 28.5313 4.20076 28.0994 4.78409C27.6752 5.36742 27.4631 6.0303 27.4631 6.77273C27.4631 7.39394 27.6108 7.92803 27.9062 8.375C28.2093 8.81439 28.5956 9.18182 29.0653 9.47727C29.535 9.76515 30.0275 10.0038 30.5426 10.1932C31.0578 10.375 31.5312 10.5227 31.9631 10.6364L34.3267 11.2727C34.9328 11.4318 35.607 11.6515 36.3494 11.9318C37.0994 12.2121 37.8153 12.5947 38.4972 13.0795C39.1866 13.5568 39.7547 14.1705 40.2017 14.9205C40.6487 15.6705 40.8722 16.5909 40.8722 17.6818C40.8722 18.9394 40.5426 20.0758 39.8835 21.0909C39.232 22.1061 38.2775 22.9129 37.0199 23.5114C35.7699 24.1098 34.2509 24.4091 32.4631 24.4091C30.7964 24.4091 29.3532 24.1402 28.1335 23.6023C26.9214 23.0644 25.9669 22.3144 25.2699 21.3523C24.5805 20.3902 24.1903 19.2727 24.0994 18H27.0085C27.0843 18.8788 27.3797 19.6061 27.8949 20.1818C28.4176 20.75 29.0767 21.1742 29.8722 21.4545C30.6752 21.7273 31.5388 21.8636 32.4631 21.8636C33.5388 21.8636 34.5047 21.6894 35.3608 21.3409C36.2169 20.9848 36.8949 20.4924 37.3949 19.8636C37.8949 19.2273 38.1449 18.4848 38.1449 17.6364C38.1449 16.8636 37.929 16.2348 37.4972 15.75C37.0653 15.2652 36.4972 14.8712 35.7926 14.5682C35.0881 14.2652 34.3267 14 33.5085 13.7727L30.6449 12.9545C28.8267 12.4318 27.3873 11.6856 26.3267 10.7159C25.2661 9.74621 24.7358 8.47727 24.7358 6.90909C24.7358 5.60606 25.0881 4.4697 25.7926 3.5C26.5047 2.52273 27.4593 1.76515 28.6562 1.22727C29.8608 0.681817 31.2055 0.40909 32.6903 0.40909C34.1903 0.40909 35.5237 0.678029 36.6903 1.21591C37.857 1.74621 38.7813 2.47348 39.4631 3.39773C40.1525 4.32197 40.5161 5.37121 40.554 6.54545H37.8267ZM64.233 8H61.4148C61.2481 7.18939 60.9564 6.47727 60.5398 5.86364C60.1307 5.25 59.6307 4.73485 59.0398 4.31818C58.4564 3.89394 57.8087 3.57576 57.0966 3.36364C56.3845 3.15151 55.642 3.04545 54.8693 3.04545C53.4602 3.04545 52.1837 3.40151 51.0398 4.11364C49.9034 4.82576 48.9981 5.875 48.3239 7.26136C47.6572 8.64773 47.3239 10.3485 47.3239 12.3636C47.3239 14.3788 47.6572 16.0795 48.3239 17.4659C48.9981 18.8523 49.9034 19.9015 51.0398 20.6136C52.1837 21.3258 53.4602 21.6818 54.8693 21.6818C55.642 21.6818 56.3845 21.5758 57.0966 21.3636C57.8087 21.1515 58.4564 20.8371 59.0398 20.4205C59.6307 19.9962 60.1307 19.4773 60.5398 18.8636C60.9564 18.2424 61.2481 17.5303 61.4148 16.7273H64.233C64.0208 17.9167 63.6345 18.9811 63.0739 19.9205C62.5133 20.8598 61.8163 21.6591 60.983 22.3182C60.1496 22.9697 59.214 23.4659 58.1761 23.8068C57.1458 24.1477 56.0436 24.3182 54.8693 24.3182C52.8845 24.3182 51.1193 23.8333 49.5739 22.8636C48.0284 21.8939 46.8125 20.5152 45.9261 18.7273C45.0398 16.9394 44.5966 14.8182 44.5966 12.3636C44.5966 9.90909 45.0398 7.78788 45.9261 6C46.8125 4.21212 48.0284 2.83333 49.5739 1.86364C51.1193 0.893939 52.8845 0.40909 54.8693 0.40909C56.0436 0.40909 57.1458 0.579545 58.1761 0.920454C59.214 1.26136 60.1496 1.76136 60.983 2.42045C61.8163 3.07197 62.5133 3.86742 63.0739 4.80682C63.6345 5.73864 64.0208 6.80303 64.233 8Z" fill="white"/>
          <path d="M75.1051 24H66.0142L69.8778 0.727272H78.6051C80.9991 0.727272 82.9991 1.20833 84.6051 2.17045C86.2112 3.13258 87.3513 4.50758 88.0256 6.29545C88.6998 8.08333 88.8324 10.2121 88.4233 12.6818C88.0294 15.0606 87.2301 17.0947 86.0256 18.7841C84.8286 20.4735 83.2983 21.7652 81.4347 22.6591C79.5786 23.553 77.4688 24 75.1051 24ZM73.2188 18.6364H75.5142C76.6657 18.6364 77.6922 18.4356 78.5938 18.0341C79.5028 17.625 80.2604 16.9432 80.8665 15.9886C81.4801 15.0265 81.9233 13.7121 82.196 12.0455C82.4536 10.4697 82.446 9.25379 82.1733 8.39773C81.9006 7.53409 81.3816 6.93561 80.6165 6.60227C79.8513 6.26136 78.8627 6.09091 77.6506 6.09091H75.3097L73.2188 18.6364ZM89.483 24L93.3466 0.727272H103.392C105.119 0.727272 106.578 1.04167 107.767 1.67045C108.956 2.29924 109.812 3.20455 110.335 4.38636C110.858 5.56818 110.983 6.98485 110.71 8.63636C110.438 10.303 109.835 11.7083 108.903 12.8523C107.979 13.9886 106.801 14.8523 105.369 15.4432C103.945 16.0265 102.347 16.3182 100.574 16.3182H94.5739L95.392 11.4091H100.119C100.862 11.4091 101.513 11.3182 102.074 11.1364C102.634 10.947 103.089 10.6515 103.438 10.25C103.786 9.84091 104.013 9.30303 104.119 8.63636C104.225 7.9697 104.172 7.42803 103.96 7.01136C103.748 6.58712 103.396 6.27651 102.903 6.07954C102.411 5.875 101.801 5.77273 101.074 5.77273H98.8466L95.8011 24H89.483ZM104.892 13.3182L108.938 24H102.074L98.1648 13.3182H104.892ZM121.352 0.727272L117.489 24H111.17L115.034 0.727272H121.352ZM130.71 0.727272L132.756 17.1364H132.938L140.438 0.727272H147.574L136.028 24H127.392L123.574 0.727272H130.71ZM145.952 24L149.815 0.727272H166.588L165.724 5.81818H155.27L154.634 9.81818H164.224L163.361 14.9091H153.77L153.134 18.9091H163.543L162.679 24H145.952Z" fill="#01DF24"/>
        </svg>
      </div>

      <div className='bg-white rounded-md flex py-2 px-4'>
        <input className='bg-transparent outline-none w-[400px]  ' type="text" placeholder='Search book,textbook,past questions and level' />
        <>
          <svg  width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path d="M10.77 18.3C9.2807 18.3 7.82485 17.8584 6.58655 17.031C5.34825 16.2036 4.38311 15.0275 3.81318 13.6516C3.24325 12.2757 3.09413 10.7616 3.38468 9.30096C3.67523 7.84029 4.39239 6.49857 5.44548 5.44548C6.49857 4.39239 7.84029 3.67523 9.30096 3.38468C10.7616 3.09413 12.2757 3.24325 13.6516 3.81318C15.0275 4.38311 16.2036 5.34825 17.031 6.58655C17.8584 7.82485 18.3 9.2807 18.3 10.77C18.3 11.7588 18.1052 12.738 17.7268 13.6516C17.3484 14.5652 16.7937 15.3953 16.0945 16.0945C15.3953 16.7937 14.5652 17.3484 13.6516 17.7268C12.738 18.1052 11.7588 18.3 10.77 18.3ZM10.77 4.74999C9.58331 4.74999 8.42327 5.10189 7.43657 5.76118C6.44988 6.42046 5.68084 7.35754 5.22672 8.45389C4.77259 9.55025 4.65377 10.7566 4.88528 11.9205C5.11679 13.0844 5.68824 14.1535 6.52735 14.9926C7.36647 15.8317 8.43556 16.4032 9.59945 16.6347C10.7633 16.8662 11.9697 16.7474 13.0661 16.2933C14.1624 15.8391 15.0995 15.0701 15.7588 14.0834C16.4181 13.0967 16.77 11.9367 16.77 10.75C16.77 9.15869 16.1379 7.63257 15.0126 6.50735C13.8874 5.38213 12.3613 4.74999 10.77 4.74999Z" fill="black"/>
          <path d="M20 20.75C19.9014 20.7504 19.8038 20.7312 19.7128 20.6934C19.6218 20.6557 19.5392 20.6001 19.47 20.53L15.34 16.4C15.2075 16.2578 15.1354 16.0697 15.1388 15.8754C15.1422 15.6811 15.2209 15.4958 15.3583 15.3583C15.4958 15.2209 15.6811 15.1422 15.8754 15.1388C16.0697 15.1354 16.2578 15.2075 16.4 15.34L20.53 19.47C20.6704 19.6106 20.7493 19.8012 20.7493 20C20.7493 20.1987 20.6704 20.3893 20.53 20.53C20.4607 20.6001 20.3782 20.6557 20.2872 20.6934C20.1961 20.7312 20.0985 20.7504 20 20.75Z" fill="black"/>
          </svg>
        </>
      </div>

      <button onClick={() => setIsOpen(!isOpen)} className='bg-[#01DF24] text-white font-medium px-5 py-2 flex'>Upload</button>      
      {isOpen && <form onClick={() => setIsOpen(false)} className="absolute w-full flex justify-center items-center left-0 h-screen bottom-0 z-10 backdrop-filter backdrop-blur-md" onSubmit={onSubmit}>
        <div onClick={(e) => e.stopPropagation()} className="bg-slate-100 p-4 flex flex-col justify-center gap-4 h-max w-[800px]">
          <div className="flex w-full items-center gap-3">
            <label htmlFor="name">name: </label>
            <input onInput={(e) => setName(e.target.value)} className="bg-white outline-none flex-grow py-2 px-4" type="text" id='name' name="name" placeholder="name" />
          </div>
          <div className="flex w-full items-center gap-3">
            <label htmlFor="description">desc: </label>
          <input onInput={(e) => setDesc(e.target.value)} className="bg-white outline-none flex-grow py-2 px-4" type="text" id="description" name="description" placeholder="description" />
          </div>

          {/*  */}
          <div className="flex w-full items-center gap-3">
              <label htmlFor="tags">Tags:</label>
              <input
                className="bg-white outline-none flex-grow py-2 px-4"
                type="text"
                id="tags"
                name="tags"
                placeholder="Add tags separated by commas"
                value={tagInput}
                onChange={handleTagInputChange}
                onKeyDown={handleTagInputKeyDown}
              />
            </div>
            <div className="flex gap-2 flex-wrap">
              {tags && tags.map((tag, index) => (
                <div
                onClick={() => removeTag(index)}
                  key={index}
                  className="bg-[#01df2272] text-white px-2 py-1 rounded"
                >
                  {tag}
                </div>
              ))}
            </div>

          {/*  */}
          
          <input id="file" type="file" className="hidden" onChange={onFileChange} />
          <label htmlFor="file" className="cursor-pointer bg-blue-400 h-max bg-[#01df226d] w-max mx-auto text-white px-8 py-2">Choose file</label>
          <button className="bg-[#01df22] w-max mx-auto text-white px-8 py-2 h-max">Submit</button>
        </div>
      </form>}
    </div>
  )
}
